<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.scdd.jxc.dao.ScddOrderMapper">
  <resultMap id="BaseResultMap" type="cn.scdd.jxc.entity.ScddOrder">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="MEMBER_ID" jdbcType="INTEGER" property="memberId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="TRANS_DATE" jdbcType="DATE" property="transDate" />
    <result column="MANUAL_FLAG" jdbcType="CHAR" property="manualFlag" />
    <result column="ACTUAL_AMOUNT" jdbcType="DECIMAL" property="actualAmount" />
    <result column="DELIVERY_ADDR" jdbcType="VARCHAR" property="deliveryAddr" />
    <result column="DELETE_FLAG" jdbcType="CHAR" property="deleteFlag" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="CREATOR_ID" jdbcType="INTEGER" property="creatorId" />
    <result column="MODIFY_DATE" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="MODIFIER_ID" jdbcType="INTEGER" property="modifierId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, MEMBER_ID, USER_ID, TRANS_DATE, MANUAL_FLAG, ACTUAL_AMOUNT, DELIVERY_ADDR, DELETE_FLAG, 
    CREATE_DATE, CREATOR_ID, MODIFY_DATE, MODIFIER_ID
  </sql>
  <select id="selectByExample" parameterType="cn.scdd.jxc.entity.ScddOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scdd_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scdd_order
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from scdd_order
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.scdd.jxc.entity.ScddOrderExample">
    delete from scdd_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.scdd.jxc.entity.ScddOrder">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
	SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into scdd_order (ID, MEMBER_ID, USER_ID, 
      TRANS_DATE, MANUAL_FLAG, ACTUAL_AMOUNT, 
      DELIVERY_ADDR, DELETE_FLAG, CREATE_DATE, 
      CREATOR_ID, MODIFY_DATE, MODIFIER_ID
      )
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{transDate,jdbcType=DATE}, #{manualFlag,jdbcType=CHAR}, #{actualAmount,jdbcType=DECIMAL}, 
      #{deliveryAddr,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{creatorId,jdbcType=INTEGER}, #{modifyDate,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.scdd.jxc.entity.ScddOrder">
    insert into scdd_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="memberId != null">
        MEMBER_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="transDate != null">
        TRANS_DATE,
      </if>
      <if test="manualFlag != null">
        MANUAL_FLAG,
      </if>
      <if test="actualAmount != null">
        ACTUAL_AMOUNT,
      </if>
      <if test="deliveryAddr != null">
        DELIVERY_ADDR,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="creatorId != null">
        CREATOR_ID,
      </if>
      <if test="modifyDate != null">
        MODIFY_DATE,
      </if>
      <if test="modifierId != null">
        MODIFIER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="transDate != null">
        #{transDate,jdbcType=DATE},
      </if>
      <if test="manualFlag != null">
        #{manualFlag,jdbcType=CHAR},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryAddr != null">
        #{deliveryAddr,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.scdd.jxc.entity.ScddOrderExample" resultType="java.lang.Integer">
    select count(*) from scdd_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scdd_order
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        MEMBER_ID = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.transDate != null">
        TRANS_DATE = #{record.transDate,jdbcType=DATE},
      </if>
      <if test="record.manualFlag != null">
        MANUAL_FLAG = #{record.manualFlag,jdbcType=CHAR},
      </if>
      <if test="record.actualAmount != null">
        ACTUAL_AMOUNT = #{record.actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deliveryAddr != null">
        DELIVERY_ADDR = #{record.deliveryAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null">
        CREATOR_ID = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.modifyDate != null">
        MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifierId != null">
        MODIFIER_ID = #{record.modifierId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scdd_order
    set ID = #{record.id,jdbcType=INTEGER},
      MEMBER_ID = #{record.memberId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      TRANS_DATE = #{record.transDate,jdbcType=DATE},
      MANUAL_FLAG = #{record.manualFlag,jdbcType=CHAR},
      ACTUAL_AMOUNT = #{record.actualAmount,jdbcType=DECIMAL},
      DELIVERY_ADDR = #{record.deliveryAddr,jdbcType=VARCHAR},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      CREATOR_ID = #{record.creatorId,jdbcType=INTEGER},
      MODIFY_DATE = #{record.modifyDate,jdbcType=TIMESTAMP},
      MODIFIER_ID = #{record.modifierId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.scdd.jxc.entity.ScddOrder">
    update scdd_order
    <set>
      <if test="memberId != null">
        MEMBER_ID = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="transDate != null">
        TRANS_DATE = #{transDate,jdbcType=DATE},
      </if>
      <if test="manualFlag != null">
        MANUAL_FLAG = #{manualFlag,jdbcType=CHAR},
      </if>
      <if test="actualAmount != null">
        ACTUAL_AMOUNT = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="deliveryAddr != null">
        DELIVERY_ADDR = #{deliveryAddr,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null">
        CREATOR_ID = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="modifyDate != null">
        MODIFY_DATE = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifierId != null">
        MODIFIER_ID = #{modifierId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.scdd.jxc.entity.ScddOrder">
    update scdd_order
    set MEMBER_ID = #{memberId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      TRANS_DATE = #{transDate,jdbcType=DATE},
      MANUAL_FLAG = #{manualFlag,jdbcType=CHAR},
      ACTUAL_AMOUNT = #{actualAmount,jdbcType=DECIMAL},
      DELIVERY_ADDR = #{deliveryAddr,jdbcType=VARCHAR},
      DELETE_FLAG = #{deleteFlag,jdbcType=CHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      CREATOR_ID = #{creatorId,jdbcType=INTEGER},
      MODIFY_DATE = #{modifyDate,jdbcType=TIMESTAMP},
      MODIFIER_ID = #{modifierId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>